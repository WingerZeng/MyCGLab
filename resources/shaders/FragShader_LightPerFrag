#version 430 core
/* outputs */
layout (location = 0) out vec3 FragColor;
layout (location = 1) out vec4 albedo;
layout (location = 2) out vec4 specular;
layout (location = 3) out vec3 worldPos;
layout (location = 4) out vec3 normal;
layout (location = 5) out vec3 primId;

/* inputs */
in vec3 aNormal;
in vec3 aWorldPos;
in vec2 aUv;

/* uniforms */
struct Material
{
	int mtype ;
	// One color
	vec4 ourColor;
	// BlinnPhong
	sampler2D kd;
	sampler2D ks;
	sampler2D ns;
};
uniform Material material;
uniform vec4 Le;
uniform bool selected = false;
uniform vec3 selectedColor;
uniform vec3 primid;

void main(){
	if(selected){
		FragColor = selectedColor;
	}
	else{
		FragColor += Le.rgb;
	}
	worldPos = aWorldPos;
	normal = normalize(aNormal);
	primId = primid;
	switch(material.mtype){
	case -1:
		albedo.rgb = material.ourColor.rgb;
		albedo.a = 0;
		specular.rgba = vec4(0);
		break;
	case 0:
		albedo.rgb = texture(material.kd, aUv).rgb;
		albedo.a = 0;
		specular.rgba = vec4(0);
		break;
	case 1:
		albedo.rgb = texture(material.kd, aUv).rgb;
		albedo.a = 1;
		specular.rgb = texture(material.ks, aUv).rgb;
		specular.a = texture(material.ns, aUv).r;
		break;
	}
	return;
}